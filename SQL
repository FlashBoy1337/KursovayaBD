-- Таблица материалов
CREATE TABLE Materials (
    material_id SERIAL PRIMARY KEY,
    material_name VARCHAR(255) NOT NULL UNIQUE,
    unit_of_measurement VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL CHECK (unit_price > 0),
    stock_quantity INT NOT NULL DEFAULT 0 CHECK (stock_quantity >= 0)
);

-- Таблица комплектующих
CREATE TABLE Components (
    component_id SERIAL PRIMARY KEY,
    component_name VARCHAR(255) NOT NULL UNIQUE,
    supplier VARCHAR(255),
    unit_price DECIMAL(10, 2) NOT NULL CHECK (unit_price > 0),
    stock_quantity INT NOT NULL DEFAULT 0 CHECK (stock_quantity >= 0)
);

-- Таблица готовых изделий
CREATE TABLE Products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT,
    selling_price DECIMAL(10, 2) NOT NULL CHECK (selling_price > 0)
);

-- Таблица состава изделия (спецификация)
-- Связывает изделия с материалами и комплектующими
CREATE TABLE Product_Composition (
    composition_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    material_id INT,
    component_id INT,
    quantity DECIMAL(10, 3) NOT NULL CHECK (quantity > 0),
    FOREIGN KEY (product_id) REFERENCES Products(product_id) ON DELETE CASCADE,
    FOREIGN KEY (material_id) REFERENCES Materials(material_id),
    FOREIGN KEY (component_id) REFERENCES Components(component_id),
    -- Проверка, что указан либо материал, либо комплектующий, но не оба сразу
    CHECK ((material_id IS NOT NULL AND component_id IS NULL) OR (material_id IS NULL AND component_id IS NOT NULL))
);

-- Таблица сотрудников
CREATE TABLE Employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    position VARCHAR(100) NOT NULL,
    hire_date DATE NOT NULL DEFAULT CURRENT_DATE
);

-- Таблица производственных заказов
CREATE TABLE Production_Orders (
    order_id SERIAL PRIMARY KEY,
    order_date DATE NOT NULL DEFAULT CURRENT_DATE,
    deadline_date DATE NOT NULL,
    status VARCHAR(50) NOT NULL DEFAULT 'Pending' CHECK (status IN ('Pending', 'In Progress', 'Completed', 'Cancelled')),
    assigned_employee_id INT,
    FOREIGN KEY (assigned_employee_id) REFERENCES Employees(employee_id),
    CHECK (deadline_date >= order_date)
);

-- Таблица позиций в заказе
CREATE TABLE Order_Items (
    item_id SERIAL PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity_to_produce INT NOT NULL CHECK (quantity_to_produce > 0),
    FOREIGN KEY (order_id) REFERENCES Production_Orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);

-- Добавление индексов для ускорения поиска
CREATE INDEX idx_materials_name ON Materials(material_name);
CREATE INDEX idx_components_name ON Components(component_name);
CREATE INDEX idx_products_name ON Products(product_name);
CREATE INDEX idx_orders_status ON Production_Orders(status);
